% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/verbs-summarise.R
\name{summarise}
\alias{summarise}
\alias{summarise_.sims}
\alias{summarise_.stanfit}
\title{Summarise posterior distributions}
\usage{
\method{summarise_}{sims}(.data, ..., .dots, .context = list(),
  .escaped = NULL)

\method{summarise_}{stanfit}(.data, ..., .dots, .context = list())
}
\arguments{
\item{.data}{A list of simulations arrays.}

\item{...}{Name-value pairs of expressions.}

\item{.dots}{Used to work around non-standard evaluation. See
dplyr's \code{vignette("nse")} for details.}

\item{.context}{Additional data on which expressions depend.}

\item{.escaped}{Names of functions that should be escaped in
addition to the binary operators.}
}
\description{
\code{summarise()} can be used to apply a function
simulationwise. This is especially useful to create posterior
summaries of your paramaters.
}
\details{
gsim's \code{summarise()} method is different from the one in dplyr
in several respects. While dplyr's method discards non-relevant
columns, gsim's method keeps all data. \code{sims} objects can
contain both simulation arrays and ordinary
objects. \code{summarise()} makes use of this possibility by adding
the summarised quantities alongside the posterior arrays.

Note that the functions mentioned in \code{...} are applied across
the posterior simulations. If you need to transform your quantities
datawise, mention the relevant functions in \code{.escaped} (though
it is generally better to transform beforehand with
\code{\link{mutate}()}). All binary operators such as \code{+} or
\code{^} are escaped by default because it doesn't make sense to
apply them across simulations.
}
\examples{
library("dplyr")

radon_sims \%>\%
  summarise(
    sigma_lower = mean(sigma) - sd(sigma),
    sigma_m = mean(sigma),
    sigma_upper = sigma_m + sd(sigma),
    sigma_975 = q975(sigma),
    sigma_025 = q025(sigma)
  )

radon_sims \%>\% summarise(sigma_est = mean_sd(Beta))
}
\seealso{
\code{\link{across_sims}()}
}

